buildscript {
  ext {
    springBootVersion = '1.5.4.RELEASE'
  }
  repositories {
    mavenCentral()
    maven { url "https://repo.spring.io/plugins-snapshot" }
    maven { url "https://repo.spring.io/snapshot" }
    maven { url "https://repo.spring.io/milestone" }
    maven { url 'http://repo.spring.io/plugins-release' }
    jcenter()
    mavenLocal()
  }
  dependencies {
    classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    classpath "se.transmode.gradle:gradle-docker:1.2"
    classpath 'io.spring.gradle:propdeps-plugin:0.0.8-SNAPSHOT'
  }
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.2'
}

apply plugin: 'propdeps'
apply plugin: 'propdeps-maven'
apply plugin: 'propdeps-idea'
apply plugin: 'propdeps-eclipse'
apply plugin: 'groovy'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'docker'

jar {
  baseName = 'com.creditsuisse.trader'
  version = '0.0.1-SNAPSHOT'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
  mavenCentral()
  maven { url "https://repo.spring.io/plugins-snapshot" }
  maven { url "https://repo.spring.io/snapshot" }
  maven { url "https://repo.spring.io/milestone" }
  maven { url 'http://repo.spring.io/plugins-release' }
  jcenter()
  mavenLocal()
}

dependencies {
  compile 'org.springframework.boot:spring-boot-starter'
  optional 'org.springframework.boot:spring-boot-devtools'
  compile 'org.springframework.boot:spring-boot-starter-web'
  compile 'org.codehaus.groovy:groovy'
  compile 'org.zeroturnaround:zt-exec:1.9'
  compile 'org.json:json:20170516'

  compile 'org.springframework.boot:spring-boot-starter-security'
  compile 'org.springframework.session:spring-session'
  compile 'org.springframework.boot:spring-boot-starter-data-redis'

  compile 'io.springfox:springfox-swagger2:2.7.0'
  compile 'io.springfox:springfox-swagger-ui:2.7.0'

  testCompile 'org.springframework.boot:spring-boot-starter-test'
  testCompile 'org.springframework.security:spring-security-test'
  testCompile 'org.spockframework:spock-spring'
  testCompile 'com.geowarin:spring-spock-mvc:0.2.1'
}


eclipse {
  classpath {
    containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
    containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
  }
}

jar {
  from('../frontend/dist') {
    into 'static'
  }
}

jar.dependsOn(':frontend:assemble')

task buildDocker(type: Docker) {
  baseImage = 'develar/java:latest'
  push = false
  tag = 'cesarchamal/trader-validator'
  addFile {
    from jar
    rename {'app.jar'}
  }
  entryPoint(['java', '-Djava.security.egd=file:/dev/./urandom', '-jar', '/app.jar'])
  exposePort(8080)
}

buildDocker.dependsOn(build)
