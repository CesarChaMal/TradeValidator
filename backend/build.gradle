buildscript {
  ext {
    springBootVersion = '2.3.12.RELEASE'
  }
  repositories {
    mavenCentral()
    gradlePluginPortal()
  }
  dependencies {
    classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    classpath "com.palantir.gradle.docker:gradle-docker:0.25.0"
  }
}

apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'com.palantir.docker'

jar {
  baseName = 'com.creditsuisse.trader'
  version = '0.0.1-SNAPSHOT'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
  mavenCentral()
}

dependencies {
  implementation 'org.springframework.boot:spring-boot-starter'
  developmentOnly 'org.springframework.boot:spring-boot-devtools'
  implementation 'org.springframework.boot:spring-boot-starter-web'
  implementation 'org.codehaus.groovy:groovy'
  implementation 'org.zeroturnaround:zt-exec:1.9'
  implementation 'org.json:json:20170516'

  implementation 'org.springframework.boot:spring-boot-starter-security'
  implementation 'org.springframework.session:spring-session-data-redis'
  implementation 'org.springframework.boot:spring-boot-starter-data-redis'

  implementation 'io.springfox:springfox-swagger2:2.7.0'
  implementation 'io.springfox:springfox-swagger-ui:2.7.0'

  testImplementation 'org.springframework.boot:spring-boot-starter-test'
  testImplementation 'org.springframework.security:spring-security-test'
  testImplementation 'org.spockframework:spock-spring:1.3-groovy-2.5'
  testImplementation 'com.geowarin:spring-spock-mvc:0.2.1'
}

eclipse {
  classpath {
    containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
    containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
  }
}

jar {
  from('../frontend/dist') {
    into 'static'
  }
}

jar.dependsOn(':frontend:assemble')

docker {
  name 'cesarchamal/trader-validator'
  files jar.archivePath
  buildArgs(['JAR_FILE': jar.archiveName])
}

task buildDocker {
  dependsOn build, docker
}